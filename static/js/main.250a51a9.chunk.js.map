{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","opt","i","type","onClick","Statistics","props","statList","Object","entries","prop","Section","title","children","Notification","message","App","onClickGoodHandler","setState","prevState","good","onClickNeutralHandler","neutral","onClickBadHandler","bad","countTotalFeedback","state","countPositiveFeedbackPercentage","positiveFeedback","Math","round","this","total","positivePercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAwBeA,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAACC,EAAKC,GACjB,OACE,6BACE,wBAAQC,KAAK,SAASC,QAASL,EAAgBG,GAA/C,SACGD,KAFIA,SCuBJI,EA5BI,SAAAC,GACjB,IAAMC,EAAWC,OAAOC,QAAQH,GAChC,OACE,6BACGC,EAASP,KAAI,SAAAU,GACZ,OACE,+BACGA,EAAK,GADR,KACcA,EAAK,KADVA,EAAK,UCQTC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACGD,GAAS,6BAAKA,IACdC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmGEC,E,kDAhGb,aAAe,IAAD,8BACZ,gBAQFC,mBAAqB,WACnB,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEC,KAAMD,EAAUC,KAAO,OAXtB,EAedC,sBAAwB,WACtB,EAAKH,UAAS,SAAAC,GACZ,MAAO,CAAEG,QAASH,EAAUG,QAAU,OAjB5B,EAqBdC,kBAAoB,WAClB,EAAKL,UAAS,SAAAC,GACZ,MAAO,CAAEK,IAAKL,EAAUK,IAAM,OAvBpB,EA2BdC,mBAAqB,WACnB,OAAO,EAAKC,MAAMN,KAAO,EAAKM,MAAMJ,QAAU,EAAKI,MAAMF,KA5B7C,EA+BdG,gCAAkC,WAChC,IAAMC,EACJ,EAAKH,qBAAuB,EACvB,IAAM,EAAKA,qBAAwB,EAAKC,MAAMN,KAC/C,EACN,OAAOS,KAAKC,MAAMF,GAAoB,MAlCtC,EAAKF,MAAQ,CACXN,KAAM,EACNE,QAAS,EACTE,IAAK,GALK,E,0CAuCd,WACE,OACE,gCAeE,cAAC,EAAD,CAASZ,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEd,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,CACfgC,KAAKd,mBACLc,KAAKV,sBACLU,KAAKR,uBAMX,cAAC,EAAD,CAASX,MAAO,aAAhB,SACGmB,KAAKL,MAAMN,KAAO,GACnBW,KAAKL,MAAMJ,QAAU,GACrBS,KAAKL,MAAMF,IAAM,EACf,cAAC,EAAD,CACEJ,KAAMW,KAAKL,MAAMN,KACjBE,QAASS,KAAKL,MAAMJ,QACpBE,IAAKO,KAAKL,MAAMF,IAChBQ,MAAOD,KAAKN,qBACZQ,mBAAoBF,KAAKJ,oCAG3B,cAAC,EAAD,CAAcZ,QAAS,+B,GAjFjBmB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.250a51a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul>\n      {options.map((opt, i) => {\n        return (\n          <li key={opt}>\n            <button type=\"button\" onClick={onLeaveFeedback[i]}>\n              {opt}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.arrayOf(PropTypes.func).isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = props => {\n  const statList = Object.entries(props);\n  return (\n    <ul>\n      {statList.map(prop => {\n        return (\n          <li key={prop[0]}>\n            {prop[0]}: {prop[1]}\n          </li>\n        );\n      })}\n      {/* <li>good {good}</li>\n            <li>neutral {neutral}</li>\n            <li>bad {bad}</li>\n            <li>total {total}</li>\n            <li>Positive feedback {positivePercentage}</li> */}\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      {title && <h1>{title}</h1>}\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  }\n\n  onClickGoodHandler = () => {\n    this.setState(prevState => {\n      return { good: prevState.good + 1 };\n    });\n  };\n\n  onClickNeutralHandler = () => {\n    this.setState(prevState => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n\n  onClickBadHandler = () => {\n    this.setState(prevState => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedback =\n      this.countTotalFeedback() > 0\n        ? (100 / this.countTotalFeedback()) * this.state.good\n        : 0;\n    return Math.round(positiveFeedback) + ' %';\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <h1>Please leave feedback</h1> */}\n\n        {/* <ul>\n          <li>\n            <button onClick={this.onClickGoodHandler}>good</button>\n          </li>\n          <li>\n            <button onClick={this.onClickNeutralHandler}>neutral</button>\n          </li>\n          <li>\n            <button onClick={this.onClickBadHandler}>bad</button>\n          </li>\n          \n        </ul> */}\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={[\n              this.onClickGoodHandler,\n              this.onClickNeutralHandler,\n              this.onClickBadHandler,\n            ]}\n          />\n        </Section>\n\n        {/* <h2>Statistics</h2> */}\n        <Section title={'Statistics'}>\n          {this.state.good > 0 ||\n          this.state.neutral > 0 ||\n          this.state.bad > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given'} />\n          )}\n        </Section>\n\n        {/* <ul>\n          <li>good {this.state.good}</li>\n          <li>neutral {this.state.neutral}</li>\n          <li>bad {this.state.bad}</li>\n          <li>total {this.countTotalFeedback()}</li>\n          <li>Positive feedback {this.countPositiveFeedbackPercentage()}</li>\n        </ul> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}